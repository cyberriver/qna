
div class= "container-fluid p-2 gap-5" id ="question_#{question.id}" data-question-id = question.id
  div class= "row shadow-sm  p-2 bg-white"
    div class = "col-md-3"
      = question.title
      - if question.show_rating >= 0      
        span class="badge bg-success" id = "rating_question_#{question.id}" rating: #{question.show_rating}
      - else 
        span class="badge bg-danger" id = "rating_question_#{question.id}"  rating: #{question.show_rating}
    div class = "col-md-6"
      = question.body
      
      .files
        -if question.files.attached?
          -question.files.each do |file|
            p= link_to file.filename.to_s, url_for(file)
            -if can?(:destroy, file)
              p= button_to "Delete_file", purge_file_path(file), method: :delete, class: "btn btn-outline-danger", remote: true
      .links
        -if question.links.present?
          -question.links.each do |link|
            ul
              li 
                -if link.gist?
                  = javascript_include_tag("#{link.url}.js")
                -else  
                  = link_to link.name, link.url
                -if can?(:destroy, link)
                  p = link_to 'Delete link', link_path(link), method: :delete, remote: true
      .reward
        -if question.reward.present?
          = image_tag(question.reward.file, size: '150x150')

           
    div class = "col-md-3"
      div class="d-grid gap-2 md-flex justify-content-md-end"
        = link_to "Answers", question_path(question), class: "btn btn-primary" 
        -if request.env['warden'].present? && can?(:edit, question)
          = button_to "Delete", question_path(question), method: :delete, class: "btn btn-outline-danger", remote: true           
          = link_to "Edit",'#', class: 'btn btn-outline-warning  edit-question-link', data: { question_id: question.id}
        - elsif can?(:like, question)
          = link_to "Like", like_path(id: question.id, liked_type: 'question', liked_params: { value:1, user_id: current_user.id }), data: {type: :json}, remote:true, method: :post, class: "btn btn-outline-primary btn-sm bi bi-hand-thumbs-up like-link"
          = link_to "Dislike", like_path(id: question.id, liked_type: 'question', liked_params: {value:-1, user_id: current_user.id}), data: {type: :json}, remote:true, method: :post, class: "btn btn-outline-danger btn-sm bi bi-hand-thumbs-down-fill dislike-link"
        -if @subsription
          -if can?(:destroy, @subsription)&&current_user.subscriptions.where(question:question).present?
            = link_to "Unsubscribe", subscriptions_path(question.id), method: :delete, class: "btn btn-outline-warning btn-sm "
        - elsif can?(:create, Subscription)
          = link_to "Subscribe", new_subscription_path(question_id:question.id), class: "btn btn-outline-primary btn-sm "
         
= form_with model: question, class: 'hidden', local: false, method: :patch, html: { id: "edit-question-#{question.id}" } do |f|
  .mb-3.bg-white
    = f.label :title, class: "form-label"
    = f.text_area :title, value: question.title, class: "form-control"
    = f.label :body, class: "form-label"
    = f.text_area :body, value: question.body, class: "form-control"
    = f.label :author_id, hidden: true, class: "form-label"
    = f.label :files, class: "form-label"
    = f.file_field :files, multiple: true, class: "form-control", placeholder: "Please choose the file"
    - if user_signed_in?
      = f.hidden_field :author_id, value: current_user.id
    - else
      = f.hidden_field :author_id, value: 'guest'
    = f.fields_for :links do |link|
      = link.link_to_add_association 'Add link', f, :links

  .gap-2
    = f.submit 'Save', class: "btn btn-primary btn-sm p-2"
