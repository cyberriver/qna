# Make sure it matches the Ruby version in .ruby-version and Gemfile
ARG RUBY_VERSION=3.1.2
FROM ruby:$RUBY_VERSION-slim as base

# Rails app lives here
WORKDIR /rails

# Set production environment
ENV BUNDLE_DEPLOYMENT="1" \
    BUNDLE_PATH="/usr/local/bundle" \
    BUNDLE_WITHOUT="development" \
    PG_USER_NAME=${PG_USER_NAME} \
    PG_USER_PASSWORD=${PG_USER_PASSWORD}

# Install packages need to build gems and node modules
USER root
RUN apt-get update -qq && \
    apt-get install -y apt-transport-https ca-certificates build-essential curl default-libmysqlclient-dev git libpq-dev libvips dirmngr apt-transport-https lsb-release node-gyp pkg-config redis-server && \
    apt-get -y autoclean

RUN apt-get install -y imagemagick

# Install Node.js
RUN curl -sL https://deb.nodesource.com/setup_16.x | bash - && \
    apt-get install -y nodejs

# Install Yarn
RUN npm install -g yarn

# Установка Ruby и Rails
RUN gem install rails -v 6.1.7

# Install application gems
COPY Gemfile Gemfile.lock ./
RUN bundle install --without development test && \
    rm -rf ~/.bundle/ "${BUNDLE_PATH}"/ruby/*/cache "${BUNDLE_PATH}"/ruby/*/bundler/gems/*/.git && \
    bundle exec bootsnap precompile --gemfile

RUN apt-get update && apt-get install -y locales
RUN echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && locale-gen
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8


COPY . .

# Run yarn install
RUN yarn install

# Precompile assets
RUN bundle exec rake assets:precompile

# Run and own the application files as a non-root user for security
RUN useradd rails
RUN chown -R rails:rails /rails
USER rails:rails
RUN chown rails:rails .yarnrc


# Entrypoint prepares the database.
ENTRYPOINT ["./docker-entrypoint"]

# Start the server by default, this can be overwritten at runtime
EXPOSE 3000

# Start Rails application
CMD ["./bin/rails", "server"]